{"version":3,"file":"static/js/716.25c3487e.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/users/users.module.css?bee1","webpack://react-kabzda-1/./src/components/users/user/user.module.css?3d28","components/users/user/User.tsx","webpack://react-kabzda-1/./src/components/common/paginator/paginator.module.css?6840","components/common/paginator/IconChevronLeft.jsx","components/common/paginator/IconChevronRight.jsx","components/common/paginator/Paginator.tsx","webpack://react-kabzda-1/./src/components/common/search/search.module.css?0b3a","components/common/search/Search.tsx","webpack://react-kabzda-1/./src/components/users/menu/menu.module.css?b265","components/users/menu/Menu.tsx","components/users/Users.tsx","redux/users-selector.ts","components/users/UsersContainer.tsx","hoc/withAuthorize.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"users_container__hxERq\",\"pages\":\"users_pages__+kauE\",\"header\":\"users_header__3xxBT\",\"preloader\":\"users_preloader__Z4WwO\",\"user\":\"users_user__riDGe\"};","// extracted by mini-css-extract-plugin\nexport default {\"userContainer\":\"user_userContainer__hw+qZ\",\"avatar\":\"user_avatar__EyKbh\",\"content\":\"user_content__yoV02\",\"name\":\"user_name__wET-7\",\"status\":\"user_status__eHn-t\",\"location\":\"user_location__05V4l\",\"btn\":\"user_btn__-YlXt\"};","import * as React from \"react\";\r\nimport classes from \"./user.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Icon from \"../../icon/Icon\";\r\nimport { textSlicer } from \"../../../utils/object-helper\";\r\nimport { UsersType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n  user: UsersType;\r\n  followingInProgress: Array<number>;\r\n  follow: (id: number) => void;\r\n  unfollow: (id: number) => void;\r\n};\r\n\r\nlet User = ({\r\n  user: { id, name, status, followed, photos },\r\n  followingInProgress,\r\n  follow,\r\n  unfollow,\r\n}: PropsType) => {\r\n  let newStatus: string | null = textSlicer(status, 19);\r\n\t\r\n  return (\r\n    <div className={classes.userContainer}>\r\n      <div className={classes.avatar}>\r\n        <Link to={\"/profile/\" + id}>\r\n          <img\r\n            src={photos.large ? photos.large : \"http://dummyimage.com/160\"}\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.name}>\r\n          <Link to={\"/profile/\" + id}>{name}</Link>\r\n        </div>\r\n        <div className={classes.status}>{newStatus}</div>\r\n        <div className={classes.btn}>\r\n          {followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((i) => i === id)}\r\n              onClick={() => {\r\n                unfollow(id);\r\n              }}\r\n            >\r\n              <Icon name='unfollow' />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((i) => i === id)}\r\n              onClick={() => {\r\n                follow(id);\r\n              }}\r\n            >\r\n              <Icon name='follow' />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagesWrapper\":\"paginator_pagesWrapper__TCjuM\",\"pages\":\"paginator_pages__lf9Mj\",\"activePage\":\"paginator_activePage__hTuok\",\"chevronIcons\":\"paginator_chevronIcons__bk--Y\",\"invisability\":\"paginator_invisability__W+kwS\"};","import * as React from \"react\";\r\n\r\nfunction ChevronLeft(props) {\r\n  return (\r\n    <svg\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      viewBox=\"0 0 24 24\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15 18l-6-6 6-6\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default ChevronLeft;","import * as React from \"react\";\r\n\r\nfunction ChevronRight(props) {\r\n  return (\r\n    <svg\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      viewBox=\"0 0 24 24\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M9 18l6-6-6-6\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default ChevronRight;\r\n","import * as React from \"react\";\r\nimport classes from \"./paginator.module.css\";\r\nimport IconChevronLeft from \"./IconChevronLeft\";\r\nimport IconChevronRight from \"./IconChevronRight\";\r\n\r\ntype PropsType = {\r\n  onPageChanged?: (pageNumber: number) => void;\r\n  currentPage?: number;\r\n  totalItemsCount: number;\r\n  pageSize: number;\r\n  portionSize?: number;\r\n  portionNumber?: number;\r\n  setPortionNumber?: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\nconst Paginator = ({\r\n  onPageChanged = () => {},\r\n  currentPage = 1,\r\n  totalItemsCount,\r\n  pageSize,\r\n  portionSize = 8,\r\n  portionNumber = 1,\r\n  setPortionNumber = () => {},\r\n}: PropsType) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages: Array<number> = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={classes.pagesWrapper}>\r\n      <button\r\n        data-testid={portionNumber > 1 ? \"chevron\" : null}\r\n        className={\r\n          portionNumber > 1\r\n            ? classes.chevronIcons + \" \" + classes.pages\r\n            : classes.chevronIcons +\r\n              \" \" +\r\n              classes.pages +\r\n              \" \" +\r\n              classes.invisability\r\n        }\r\n        onClick={() => {\r\n          setPortionNumber((prev) => prev - 1);\r\n          onPageChanged(rightPortionNumber - portionSize);\r\n        }}\r\n      >\r\n        <IconChevronLeft />\r\n      </button>\r\n\r\n      {pagesCount > 1 &&\r\n        pages\r\n          .filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\r\n          .map((p) => (\r\n            <button\r\n              key={p}\r\n              data-testid=\"pageNumber\"\r\n              onClick={() => onPageChanged(p)}\r\n              className={\r\n                currentPage === p\r\n                  ? classes.activePage + \" \" + classes.pages\r\n                  : classes.pages\r\n              }\r\n            >\r\n              {p}\r\n            </button>\r\n          ))}\r\n\r\n      <button\r\n        data-testid={portionNumber < portionCount\r\n\t\t\t\t? \"chevron\" : null}\r\n        className={\r\n          portionNumber < portionCount\r\n            ? classes.chevronIcons + \" \" + classes.pages\r\n            : classes.chevronIcons +\r\n              \" \" +\r\n              classes.pages +\r\n              \" \" +\r\n              classes.invisability\r\n        }\r\n        onClick={() => {\r\n          setPortionNumber((prev) => prev + 1);\r\n          onPageChanged(leftPortionNumber + portionSize);\r\n        }}\r\n      >\r\n        <IconChevronRight />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"search_searchContainer__rKZmv\",\"buttonWrapper\":\"search_buttonWrapper__-E0wW\",\"inputWrapper\":\"search_inputWrapper__AILOD\"};","import React, { useRef } from \"react\";\r\nimport classes from \"./search.module.css\";\r\nimport Icon from \"../../icon/Icon\";\r\n\r\ntype PropsType = {\r\n  search: string;\r\n  placeHolderValue?: string;\r\n  onSearch: (value: string) => void;\r\n};\r\n\r\nconst Search = ({ search, placeHolderValue = \"\", onSearch }: PropsType) => {\r\n  const searchRef = useRef(null);\r\n\r\n  return (\r\n    <div className={classes.searchContainer}>\r\n      <div className={classes.inputWrapper}>\r\n        <input\r\n          ref={searchRef}\r\n          type=\"text\"\r\n          value={search}\r\n          placeholder={placeHolderValue}\r\n          onChange={(e) => {\r\n            onSearch(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.buttonWrapper}>\r\n        <button onClick={(e) => {}}>\r\n          <Icon name={'search'} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"menu_menu__MLBfE\",\"item\":\"menu_item__x8e31\",\"btn\":\"menu_btn__5+NLh\",\"active\":\"menu_active__vfzGj\"};","import * as React from \"react\";\r\nimport classes from \"./menu.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentPage } from \"../../../redux/users-reduser\";\r\n\r\ntype PropsType = {\r\n  friend: boolean;\r\n  setFriend: (friend: boolean) => void;\r\n\tsetPortionNumber: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\nconst Menu = ({ friend, setFriend, setPortionNumber }: PropsType) => {\r\n\tconst dispatch = useDispatch()\r\n  const onFriend = () => {\r\n    setFriend(!friend);\r\n\t\tdispatch(setCurrentPage(1))\r\n\t\tsetPortionNumber(1)\r\n  };\r\n  return (\r\n    <div className={classes.menu}>\r\n      <div className={classes.item}>\r\n        <button\r\n          className={friend ? classes.btn + \" \" + classes.active : classes.btn}\r\n          onClick={onFriend}\r\n        >\r\n          My friends\r\n        </button>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <button\r\n          className={friend ? classes.btn : classes.btn + \" \" + classes.active}\r\n          onClick={onFriend}\r\n        >\r\n          Search for friends\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import * as React from \"react\";\r\nimport classes from \"./users.module.css\";\r\nimport Preloader from \"../common/preloader/preloader/Preloader\";\r\nimport User from \"./user/User\";\r\nimport Paginator from \"../common/paginator/Paginator\";\r\nimport Search from \"../common/search/Search\";\r\nimport { UsersType } from \"../../types/types\";\r\nimport Menu from \"./menu/Menu\";\r\n\r\ntype Props = {\r\n  totalUsersCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  isFetching: boolean;\r\n  users: Array<UsersType>;\r\n  followingInProgress: Array<number>;\r\n  search: string;\r\n  friend: boolean;\r\n  setFriend: (friend: boolean) => void;\r\n  follow: (id: number) => void;\r\n  unfollow: (id: number) => void;\r\n  onPageChanged: (pageNumber: number) => void;\r\n  onSearch: (value: string) => void;\r\n};\r\n\r\nlet Users = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  isFetching,\r\n  users,\r\n  followingInProgress,\r\n  search,\r\n  friend,\r\n  setFriend,\r\n  follow,\r\n  unfollow,\r\n  onPageChanged,\r\n  onSearch,\r\n}: Props) => {\r\n  let [portionNumber, setPortionNumber] = React.useState<number>(1);\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <div className={classes.pages}>\r\n          <h1 className={classes.header}>Friends</h1>\r\n          <Search\r\n            search={search}\r\n            onSearch={onSearch}\r\n            placeHolderValue={\"Enter a request\"}\r\n          />\r\n          <div className={classes.user}>\r\n            {isFetching ? (\r\n              <div className={classes.preloader}>\r\n                <Preloader />\r\n              </div>\r\n            ) : (\r\n              users.map((u) => (\r\n                <User\r\n                  key={u.id}\r\n                  user={u}\r\n                  follow={follow}\r\n                  unfollow={unfollow}\r\n                  followingInProgress={followingInProgress}\r\n                />\r\n              ))\r\n            )}\r\n          </div>\r\n          <Paginator\r\n            onPageChanged={onPageChanged}\r\n            currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            portionNumber={portionNumber}\r\n            setPortionNumber={setPortionNumber}\r\n          />\r\n        </div>\r\n        <Menu\r\n          friend={friend}\r\n          setFriend={setFriend}\r\n          setPortionNumber={setPortionNumber}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from './redux-store';\r\n\r\nconst getUsersSelector = (state: RootState) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter((u) => true);\r\n});\r\n\r\nexport const getPageSize = (state: RootState) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: RootState) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: RootState) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: RootState) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: RootState) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, requestUsers } from '../../redux/users-reduser';\r\nimport Users from './Users';\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from '../../redux/users-selector';\r\nimport { RootState } from '../../redux/redux-store';\r\nimport { useTrottle } from '../../hooks/hooks';\r\nimport WithAuthorize from '../../hoc/withAuthorize';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\ntype MapProps = ReturnType<typeof mapStateToProps>;\r\n\r\ntype MapDispatchPropsType = {\r\n  requestUsers: ({\r\n    currentPage,\r\n    pageSize,\r\n    search,\r\n    friend,\r\n  }: {\r\n    currentPage: number;\r\n    pageSize: number;\r\n    search?: string;\r\n    friend?: boolean;\r\n  }) => void;\r\n  follow: (id: number) => void;\r\n  unfollow: (id: number) => void;\r\n};\r\n\r\ntype PropsType = MapProps & MapDispatchPropsType;\r\n\r\nconst UsersComponent = ({\r\n  auth,\r\n  currentPage,\r\n  pageSize,\r\n  requestUsers,\r\n  ...props\r\n}: PropsType) => {\r\n  const [search, setSearchValue] = useState('');\r\n  const [friend, setFriend] = useState(true);\r\n  React.useEffect(() => {\r\n    requestUsers({ currentPage, pageSize, search, friend });\r\n  }, [currentPage, pageSize, friend]);\r\n\r\n  const onPageChanged = (pageNumber: number) => {\r\n    currentPage !== pageNumber &&\r\n      requestUsers({ currentPage: pageNumber, pageSize });\r\n  };\r\n\r\n  useTrottle(\r\n    () => requestUsers({ currentPage, pageSize, search, friend }),\r\n    [search],\r\n    1500\r\n  );\r\n\r\n  return (\r\n    <WithAuthorize\r\n      isAuthorize={!!auth}\r\n      components={{\r\n        Authorized: (\r\n          <Users\r\n            {...props}\r\n            currentPage={currentPage}\r\n            pageSize={pageSize}\r\n            search={search}\r\n            friend={friend}\r\n            setFriend={setFriend}\r\n            onPageChanged={onPageChanged}\r\n            onSearch={setSearchValue}\r\n          />\r\n        ),\r\n        Unauthorized: (<Navigate to={'/login'} />),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n  return {\r\n    auth: state.auth.userId,\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  requestUsers,\r\n})(UsersComponent);\r\n","import { ReactElement } from 'react';\r\n\r\ntype WithAuthorizeProps = {\r\n  isAuthorize: boolean;\r\n  components: { [key: string]: ReactElement };\r\n};\r\n\r\nconst WithAuthorize = ({\r\n  isAuthorize,\r\n  components: { Authorized, Unauthorized },\r\n}: WithAuthorizeProps) => {\r\n  return isAuthorize ? Authorized : Unauthorized;\r\n};\r\n\r\nexport default WithAuthorize;\r\n"],"names":["_ref","user","id","name","status","followed","photos","followingInProgress","follow","unfollow","newStatus","textSlicer","_jsxs","className","classes","children","_jsx","Link","to","src","large","alt","disabled","some","i","onClick","Icon","props","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","height","width","d","onPageChanged","currentPage","totalItemsCount","pageSize","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","push","portionCount","leftPortionNumber","rightPortionNumber","prev","IconChevronLeft","filter","p","map","IconChevronRight","search","placeHolderValue","onSearch","searchRef","useRef","ref","type","value","placeholder","onChange","e","target","friend","setFriend","dispatch","useDispatch","onFriend","setCurrentPage","totalUsersCount","isFetching","users","React","_Fragment","Search","Preloader","u","User","Paginator","Menu","getUsers","createSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","connect","auth","userId","requestUsers","setSearchValue","useState","useTrottle","WithAuthorize","isAuthorize","components","Authorized","Users","pageNumber","Unauthorized","Navigate"],"sourceRoot":""}