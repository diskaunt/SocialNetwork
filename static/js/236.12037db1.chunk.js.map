{"version":3,"file":"static/js/236.12037db1.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","assets/svg/IconLike.tsx","assets/svg/IconOptionPost.tsx","components/Profile/MyPosts/Post/Post.tsx","assets/svg/IconNoPosts.tsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/AddNewPostForm.module.css?f945","components/Profile/MyPosts/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/Friends/Friends.module.css?9990","components/Profile/ProfileInfo/Friends/Friends.tsx","assets/svg/IconClose.tsx","assets/svg/IconUpload.tsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/Popups/UpdatePhoto/UpdatePhoto.module.css?69c7","components/Profile/ProfileInfo/Popups/UpdatePhoto/UpdatePhoto.tsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/Popups/UpdateProfileInfo/UpdateProfileInfo.module.css?b9ac","components/Profile/ProfileInfo/Popups/UpdateProfileInfo/UpdateProfileInfo.tsx","components/Profile/ProfileInfo/Popups/Popup.tsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/Info/Info.module.css?1712","components/Profile/ProfileInfo/Info/Info.tsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileHeader/ProfileHeader.module.css?4d2d","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileHeader/ProfileStatus.module.css?bdaf","components/Profile/ProfileInfo/ProfileHeader/ProfileStatus.tsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileHeader/MenuBlock/MenuBlock.module.css?dd7c","assets/svg/IconPicture.tsx","assets/svg/IconPencil.tsx","assets/svg/IconDelete.tsx","components/Profile/ProfileInfo/ProfileHeader/MenuBlock/MenuBlock.tsx","components/Profile/ProfileInfo/ProfileHeader/ProfileHeader.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://react-kabzda-1/./src/components/common/Preloader/ProfileInfoPreloader.module.css?ffd8","components/common/Preloader/ProfileInfoPreloader.js","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__1Sg9h\",\"profileInfo\":\"Profile_profileInfo__LJqUs\",\"preloader\":\"Profile_preloader__7RneD\",\"myPosts\":\"Profile_myPosts__hTTlS\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MyPosts_container__h9JOY\",\"header\":\"MyPosts_header__urevB\",\"newPost\":\"MyPosts_newPost__mL+9k\",\"posts\":\"MyPosts_posts__mYu28\",\"scrollTo\":\"MyPosts_scrollTo__To045\",\"post\":\"MyPosts_post__SrZut\",\"noPosts\":\"MyPosts_noPosts__TwtY3\"};","// extracted by mini-css-extract-plugin\nexport default {\"imgWrapper\":\"Post_imgWrapper__UtjdP\",\"item\":\"Post_item__bFbwx\",\"name\":\"Post_name__1poOt\",\"wallPost\":\"Post_wallPost__yp9HR\",\"options\":\"Post_options__rgsAj\",\"optionsActive\":\"Post_optionsActive__vTXdJ\",\"menuBlock\":\"Post_menuBlock__OxkSh\",\"menuItem\":\"Post_menuItem__+FLZQ\",\"menuBlockWrapper\":\"Post_menuBlockWrapper__TY7vs\",\"postBtn\":\"Post_postBtn__8tpEz\",\"svg\":\"Post_svg__8oHPd\",\"likesCount\":\"Post_likesCount__8oBcx\",\"date\":\"Post_date__ij+vh\"};","import * as React from \"react\";\r\n\r\nfunction IconLike(props: {[key: string]: any}) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 1024 1024\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 00-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4A106.62 106.62 0 00471 99.9c-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81zm636.4-353l-21.9 19 13.9 25.4a56.2 56.2 0 016.9 27.3c0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 016.9 27.3c0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 016.9 27.3c0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5a44.1 44.1 0 0142.2-32.3c7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconLike;","import React from \"react\";\r\n\r\nconst IconOptionPost = (props: {[key: string]: any}) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    {...props}\r\n  >\r\n    <g\r\n      id=\"more_horizontal_24__Page-2\"\r\n      stroke=\"none\"\r\n      strokeWidth=\"1\"\r\n      fill=\"none\"\r\n      fillRule=\"evenodd\"\r\n    >\r\n      <g id=\"more_horizontal_24__more_horizontal_24\">\r\n        <path id=\"more_horizontal_24__Bounds\" d=\"M24 0H0v24h24z\"></path>\r\n        <path\r\n          d=\"M18 10a2 2 0 0 1 2 2 2 2 0 0 1-2 2 2 2 0 0 1-2-2c0-1.1.9-2 2-2Zm-6 4a2 2 0 0 1-2-2c0-1.1.9-2 2-2a2 2 0 0 1 2 2 2 2 0 0 1-2 2Zm-6 0a2 2 0 0 1-2-2c0-1.1.9-2 2-2a2 2 0 0 1 2 2 2 2 0 0 1-2 2Z\"\r\n          id=\"more_horizontal_24__Mask\"\r\n          fill=\"currentColor\"\r\n        ></path>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconOptionPost;\r\n","import React, { memo, useRef, useState } from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport IconLike from \"../../../../assets/svg/IconLike\";\r\nimport IconOptionPost from \"../../../../assets/svg/IconOptionPost\";\r\nimport { useMouseOverLeaveDebounce } from \"../../../../hooks/hooks\";\r\nimport { PostType } from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n  photo: string;\r\n  deletePost: (id: number) => void;\r\n} & PostType;\r\n\r\nconst Post = ({\r\n  photo,\r\n  name,\r\n  date,\r\n  deletePost,\r\n  id,\r\n  message,\r\n  likesCount,\r\n}: PropsType) => {\r\n  const [isOptionsSelect, setOptionsSelect] = useState(false);\r\n  let optionsRef = useRef(null);\r\n  useMouseOverLeaveDebounce(optionsRef, setOptionsSelect, 200);\r\n  return (\r\n    <>\r\n      <div className={classes.imgWrapper}>\r\n        <img src={photo} alt=\"avatar\" />\r\n      </div>\r\n      <div className={classes.name}>\r\n        <div>{name}</div>\r\n        <div className={classes.date}>{date}</div>\r\n      </div>\r\n      <div\r\n        ref={optionsRef}\r\n        className={\r\n          isOptionsSelect\r\n            ? classes.options + \" \" + classes.optionsActive\r\n            : classes.options\r\n        }\r\n      >\r\n        <IconOptionPost />\r\n        <div className={classes.menuBlockWrapper}>\r\n          <MenuBlock deletePost={deletePost} id={id} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.wallPost}>{message}</div>\r\n      <div className={classes.postBtn}>\r\n        <IconLike className={classes.svg} />\r\n        <span className={classes.likesCount}>{likesCount}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MenuBlock = ({\r\n  deletePost,\r\n  id,\r\n}: {\r\n  deletePost: (id: number) => void;\r\n  id: number;\r\n}) => {\r\n  return (\r\n    <div className={classes.menuBlock}>\r\n      <div onClick={() => deletePost(id)} className={classes.menuItem}>\r\n        Delete an entry\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Post);\r\n","import React from \"react\";\r\n\r\nconst IconNoPost = (props: {[key: string]: any}) => (\r\n  <svg\r\n    width=\"56\"\r\n    height=\"56\"\r\n    viewBox=\"0 0 56 56\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t{...props}\r\n  >\r\n    <g\r\n      id=\"newsfeed_outline_56__Icons-56/newsfeed_outline_56\"\r\n      stroke=\"none\"\r\n      strokeWidth=\"1\"\r\n      fill=\"none\"\r\n      fillRule=\"evenodd\"\r\n    >\r\n      <g id=\"newsfeed_outline_56__newsfeed_outline_56\">\r\n        <path d=\"M0 0h56v56H0z\"></path>\r\n        <path\r\n          d=\"M20.32 6H35.1c3.73.03 5.68.37 7.57 1.3l.42.21c1.9 1.01 3.39 2.5 4.4 4.4 1.04 1.96 1.45 3.85 1.5 7.58l.01.83V35.5c-.06 3.73-.47 5.62-1.51 7.58a10.59 10.59 0 0 1-4.4 4.4c-1.96 1.04-3.85 1.45-7.58 1.5l-.83.01H19.5c-3.73-.06-5.62-.47-7.58-1.51a10.59 10.59 0 0 1-4.4-4.4c-1.04-1.96-1.45-3.85-1.5-7.58L6 34.68V19.9c.03-3.73.37-5.68 1.3-7.57l.21-.42c1.01-1.9 2.5-3.39 4.4-4.4 1.96-1.04 3.85-1.45 7.58-1.5l.83-.01ZM46 20.91a1.5 1.5 0 0 1-.5.09h-36a1.5 1.5 0 0 1-.5-.09v14.51c.04 3.3.36 4.76 1.16 6.26a7.59 7.59 0 0 0 3.16 3.16c1.5.8 2.95 1.12 6.26 1.16h15.84c3.3-.04 4.76-.36 6.26-1.16a7.59 7.59 0 0 0 3.16-3.16c.8-1.5 1.12-2.95 1.16-6.26v-.74ZM34.68 9h-15.1c-3.3.04-4.76.36-6.26 1.16a7.59 7.59 0 0 0-3.16 3.16c-.67 1.25-1 2.47-1.11 4.75.14-.05.3-.07.45-.07h36c.16 0 .3.02.45.07-.11-2.28-.44-3.5-1.1-4.75a7.59 7.59 0 0 0-3.17-3.16c-1.6-.86-3.16-1.16-7-1.16Z\"\r\n          id=\"newsfeed_outline_56__Icon-Color\"\r\n          fill=\"currentColor\"\r\n          fillRule=\"nonzero\"\r\n        ></path>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconNoPost\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnWrapper\":\"AddNewPostForm_btnWrapper__FIwx-\",\"formItem\":\"AddNewPostForm_formItem__oJR+N\",\"newPostTextarea\":\"AddNewPostForm_newPostTextarea__BS1lP\"};","import * as React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./AddNewPostForm.module.css\";\r\nimport Button from \"../../common/Button/Button\";\r\n\r\ntype PropsType = {\r\n  onAddPost: (values: { newPostText: string }, form: Record<string, any>) => void;\r\n};\r\n\r\nconst AddNewPostForm = ({ onAddPost }: PropsType) => {\r\n  return (\r\n    <Form\r\n      onSubmit={onAddPost}\r\n      render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={classes.formItem}>\r\n            <Field<string>\r\n              name=\"newPostText\"\r\n              component={Textarea}\r\n              // validate={composeValidators(maxLength(300))}\r\n              placeholder=\"What's new for you?\"\r\n              type=\"text\"\r\n              className={classes.newPostTextarea}\r\n            />\r\n          </div>\r\n          <div className={classes.btnWrapper}>\r\n            <Button type=\"submit\" disabled={pristine || submitting}>\r\n              Add post\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddNewPostForm;\r\n","import React from \"react\";\r\nimport { memo } from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport IconNoPosts from \"../../../assets/svg/IconNoPosts\";\r\nimport AddNewPostForm from \"./AddNewPostForm\";\r\nimport { PostType, ProfileType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n  posts: Array<PostType>;\r\n  profile: ProfileType | null;\r\n  deletePost: (value: number) => void;\r\n  addPost: (payload: { newPostText: string; fullName: string }) => void;\r\n};\r\n\r\nconst MyPosts = ({ posts, deletePost, profile, addPost }: PropsType) => {\r\n  let postsElements = [...posts].reverse().map((post) => (\r\n    <div key={post.id} className={classes.post}>\r\n      <Post\r\n        id={post.id}\r\n        name={post.name || \"name\"}\r\n        date={post.date || \"date\"}\r\n        likesCount={post.likesCount}\r\n        message={post.message}\r\n        photo={\r\n          (profile?.photos && profile.photos.small) ||\r\n          \"http://dummyimage.com/50\"\r\n        }\r\n        deletePost={deletePost}\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  const onAddPost = async (values: {newPostText:string}, form: Record<string, any>) => {\r\n    profile?.fullName &&\r\n      (await addPost({\r\n        newPostText: values.newPostText,\r\n        fullName: profile.fullName,\r\n      }));\r\n\t\t\tform.reset()\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.newPost}>\r\n        <h3 className={classes.header}>My posts</h3>\r\n        <AddNewPostForm onAddPost={onAddPost} />\r\n      </div>\r\n      <div className={classes.posts}>\r\n        {posts.length ? (\r\n          postsElements\r\n        ) : (\r\n          <div className={classes.noPosts}>\r\n            <IconNoPosts />\r\n            <div>There is not a single entry on the wall yet</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MyPosts);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileInfo_container__nYENa\",\"header\":\"ProfileInfo_header__gPQqo\",\"info\":\"ProfileInfo_info__dyqk7\",\"friends\":\"ProfileInfo_friends__ssWH7\",\"popup\":\"ProfileInfo_popup__Zo-hl\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Friends_title__pRGcP\",\"countOfUsers\":\"Friends_countOfUsers__9TJXw\",\"main\":\"Friends_main__hZ1Cx\",\"users\":\"Friends_users__pv7cU\",\"user\":\"Friends_user__AmHpv\",\"avatarWrapper\":\"Friends_avatarWrapper__Tcx3k\",\"avatar\":\"Friends_avatar__q8gdY\",\"name\":\"Friends_name__p+NYa\"};","import React, { Fragment } from \"react\";\r\nimport classes from \"./Friends.module.css\";\r\nimport { UsersType } from \"../../../../types/types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { textSlicer } from \"../../../../utils/object-helper\";\r\n\r\ntype PropsType = {\r\n  users: Array<UsersType>;\r\n  totalUsersCount: number;\r\n};\r\n\r\nconst Friends = ({ users, totalUsersCount }: PropsType) => {\r\n  const friends = users.map((user) => {\r\n    const slicaedName: string | null = textSlicer(user.name, 7);\r\n    return (\r\n      <Link key={user.id} to={\"/profile/\" + user.id}>\r\n        <div className={classes.user}>\r\n          <div className={classes.avatarWrapper}>\r\n            <img\r\n              className={classes.avatar}\r\n              src={user.photos.large || \"http://dummyimage.com/64\"}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className={classes.name}>{slicaedName}</div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Link to={\"/friends\"}>\r\n        <div className={classes.title}>\r\n          Friends{\" \"}\r\n          <span className={classes.countOfUsers}>{totalUsersCount}</span>\r\n        </div>\r\n      </Link>\r\n      <div className={classes.main}>\r\n        <div className={classes.users}>{friends}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","import * as React from \"react\";\r\n\r\nfunction IconClose(props: {[key: string]: any}) {\r\n  return (\r\n    <svg fill=\"none\" viewBox=\"0 0 24 24\" height=\"20px\" width=\"20px\" {...props}>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M6.225 4.811a1 1 0 00-1.414 1.414L10.586 12 4.81 17.775a1 1 0 101.414 1.414L12 13.414l5.775 5.775a1 1 0 001.414-1.414L13.414 12l5.775-5.775a1 1 0 00-1.414-1.414L12 10.586 6.225 4.81z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconClose;","import * as React from \"react\";\r\n\r\nfunction IconUpload(props: {[key: string]: any}) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      {...props}\r\n    >\r\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n      <path d=\"M12 12.586l4.243 4.242-1.415 1.415L13 16.415V22h-2v-5.587l-1.828 1.83-1.415-1.415L12 12.586zM12 2a7.001 7.001 0 016.954 6.194 5.5 5.5 0 01-.953 10.784v-2.014a3.5 3.5 0 10-1.112-6.91 5 5 0 10-9.777 0 3.5 3.5 0 00-1.292 6.88l.18.03v2.014a5.5 5.5 0 01-.954-10.784A7 7 0 0112 2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconUpload;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UpdatePhoto_container__FIzP8\",\"header\":\"UpdatePhoto_header__Mg4Zt\",\"main\":\"UpdatePhoto_main__1hgx-\",\"dragAndDropUploadZone\":\"UpdatePhoto_dragAndDropUploadZone__Hhx8h\",\"dragover\":\"UpdatePhoto_dragover__QYCz8\",\"iconUploadWrapper\":\"UpdatePhoto_iconUploadWrapper__BbEfJ\",\"footer\":\"UpdatePhoto_footer__1glQv\",\"inputWrapper\":\"UpdatePhoto_inputWrapper__G+rbz\",\"text\":\"UpdatePhoto_text__q89M4\",\"input\":\"UpdatePhoto_input__+j80u\",\"label\":\"UpdatePhoto_label__ptTQq\",\"closeWrapper\":\"UpdatePhoto_closeWrapper__JX2cI\",\"close\":\"UpdatePhoto_close__VOGTj\",\"error\":\"UpdatePhoto_error__j-0n5\",\"invisible\":\"UpdatePhoto_invisible__ucbXs\"};","import React, { ChangeEvent, useCallback, useRef, useState } from \"react\";\r\nimport IconClose from \"../../../../../assets/svg/IconClose\";\r\nimport IconUpload from \"../../../../../assets/svg/IconUpload\";\r\nimport classes from \"./UpdatePhoto.module.css\";\r\n\r\ntype PropsType = {\r\n  onModalClose: () => void;\r\n  savePhoto: (file: File) => Promise<any>;\r\n};\r\n\r\nconst UpdatePhoto = ({ onModalClose, savePhoto }: PropsType) => {\r\n  const dragAndDropZoneRef = useRef(null);\r\n  const setFocus = useCallback((element: HTMLInputElement) => {\r\n    element && element.focus();\r\n  }, []);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const onPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file: File = (e.target.files as FileList)[0];\r\n    Boolean(file) &&\r\n      savePhoto(file).then((data) => {\r\n        if (data.length === 0) {\r\n\t\t\t\t\tsetErrorMessage(null)\r\n          onModalClose();\r\n        } else {\r\n          setErrorMessage(data[0]);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <div className={classes.header}>Uploading a new photo</div>\r\n        <div className={classes.main}>\r\n          <div\r\n            ref={dragAndDropZoneRef}\r\n            className={classes.dragAndDropUploadZone}\r\n          >\r\n            <div className={classes.iconUploadWrapper}>\r\n              <IconUpload />\r\n            </div>\r\n            <div className={classes.inputWrapper}>\r\n              <div className={classes.text}>Move the photo here or</div>\r\n              <input\r\n                ref={setFocus}\r\n                id=\"avatarInput\"\r\n                name=\"avatar\"\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                className={classes.input}\r\n                onChange={onPhotoSelected}\r\n              />\r\n              <label className={classes.label} htmlFor=\"avatarInput\">\r\n                select a file\r\n              </label>\r\n            </div>\r\n            <div\r\n              className={\r\n                errorMessage\r\n                  ? classes.error\r\n                  : classes.error + \" \" + classes.invisible\r\n              }\r\n            >\r\n              {errorMessage}!\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"hint\" className={classes.footer}>\r\n          If you are having problems uploading, try choosing a smaller photo.\r\n        </div>\r\n      </div>\r\n      <button onClick={onModalClose} className={classes.closeWrapper}>\r\n        <div className={classes.close}>\r\n          <IconClose />\r\n        </div>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdatePhoto;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"UpdateProfileInfo_form__ihrxX\",\"closeWrapper\":\"UpdateProfileInfo_closeWrapper__nS6Em\",\"header\":\"UpdateProfileInfo_header__q4uD6\",\"item\":\"UpdateProfileInfo_item__k01XH\",\"label\":\"UpdateProfileInfo_label__IIJQ9\",\"textareaText\":\"UpdateProfileInfo_textareaText__voAZ-\",\"inputText\":\"UpdateProfileInfo_inputText__UIAtL\",\"contacts\":\"UpdateProfileInfo_contacts__LidY2\",\"select\":\"UpdateProfileInfo_select__HBo1z\",\"submitBtnWrapper\":\"UpdateProfileInfo_submitBtnWrapper__uLFwu\",\"error\":\"UpdateProfileInfo_error__ZcBki\",\"close\":\"UpdateProfileInfo_close__8uRUK\"};","import * as React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport IconClose from \"../../../../../assets/svg/IconClose\";\r\nimport classes from \"./UpdateProfileInfo.module.css\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport {\r\n  Input,\r\n  Textarea,\r\n} from \"../../../../common/FormsControls/FormsControls\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport Button from \"../../../../common/Button/Button\";\r\nimport { ContactsType, ProfileType } from \"../../../../../types/types\";\r\n\r\ntype PropsType = {\r\n\tonModalClose: () => void;\r\n  onSaveProfile: (values: ProfileType) => Promise<string | null> | null;\r\n  fullName?: string | null;\r\n  aboutMe?: string | null;\r\n  contacts?: ContactsType;\r\n  lookingForAJob?: boolean;\r\n  lookingForAJobDescription?: string | null;\r\n}\r\n\r\nconst UpdateProfileInfo = ({\r\n  onModalClose,\r\n  onSaveProfile,\r\n  fullName,\r\n  aboutMe,\r\n  contacts,\r\n  lookingForAJob,\r\n  lookingForAJobDescription,\r\n}: PropsType) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        onSubmit={async (values: ProfileType) => {\r\n          const error = await onSaveProfile(values);\r\n          if (error) {\r\n            return { [FORM_ERROR]: error };\r\n          }\r\n        }}\r\n        initialValues={\r\n          {fullName,\r\n          aboutMe,\r\n          contacts,\r\n          lookingForAJob,\r\n          lookingForAJobDescription}\r\n        }\r\n        render={({\r\n          submitError,\r\n          handleSubmit,\r\n          values,\r\n          submitting,\r\n          pristine,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className={classes.form}>\r\n            <h3 className={classes.header}>Edit Info</h3>\r\n            <div className={classes.item}>\r\n              <label className={classes.label}>FullName:</label>\r\n              <Field\r\n                name=\"fullName\"\r\n                component={Input}\r\n                type=\"text\"\r\n                placeholder=\"fullName\"\r\n                className={classes.inputText}\r\n              />\r\n            </div>\r\n            <div className={classes.item}>\r\n              <label className={classes.label}>About me:</label>\r\n              <Field\r\n                name=\"aboutMe\"\r\n                component={Textarea}\r\n                type=\"text\"\r\n                placeholder=\"About me\"\r\n                className={classes.textareaText}\r\n              />\r\n            </div>\r\n            <div className={classes.item}>\r\n              <label className={classes.label}>Contacts: </label>\r\n              <div className={classes.contacts}>\r\n                {contacts && Object.keys(contacts).map((contact, i) => {\r\n                  return (\r\n                    <Fragment key={i}>\r\n                      <label className={classes.label}>{contact}: </label>\r\n                      <Field\r\n                        name={\"contacts.\" + contact}\r\n                        component={Input}\r\n                        type=\"text\"\r\n                        placeholder={contact + \".com\"}\r\n                        className={classes.inputText}\r\n                      />\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className={classes.item}>\r\n              <label className={classes.label}>Looking for a job: </label>\r\n              <Field\r\n                name=\"lookingForAJob\"\r\n                component=\"select\"\r\n                className={classes.select}\r\n              >\r\n                <option>not selected</option>\r\n                <option value={\"true\"}>yes</option>\r\n                <option value={\"false\"}>no</option>\r\n              </Field>\r\n              {/* <Field\r\n                name=\"lookingForAJob\"\r\n                component={ReactSelectAdapter}\r\n                className={classes.select}\r\n                options={[\r\n                  { label: \"not selected\", value: null },\r\n                  { label: \"yes\", value: true },\r\n                  { label: \"no\", value: false },\r\n                ]}\r\n              /> */}\r\n              {String(values.lookingForAJob) === \"true\" ? (\r\n                <>\r\n                  <label className={classes.label}>Skills:</label>\r\n                  <Field\r\n                    name=\"lookingForAJobDescription\"\r\n                    component={Textarea}\r\n                    type=\"textarea\"\r\n                    placeholder=\"My professional skills\"\r\n                    className={classes.textareaText}\r\n                  />\r\n                </>\r\n              ) : null}\r\n            </div>\r\n            <div className={classes.submitBtnWrapper}>\r\n              <Button type=\"submit\"> Save changes</Button>\r\n            </div>\r\n            <span className={classes.error}>{submitError}</span>\r\n          </form>\r\n        )}\r\n      />\r\n      <button onClick={onModalClose} className={classes.closeWrapper}>\r\n        <div className={classes.close}>\r\n          <IconClose />\r\n        </div>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfileInfo;\r\n","import * as React from \"react\";\r\nimport UpdatePhoto from \"./UpdatePhoto/UpdatePhoto\";\r\nimport UpdateProfileInfo from \"./UpdateProfileInfo/UpdateProfileInfo\";\r\nimport { ContactsType, ProfileType } from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n\tonModalClose: () => void;\r\n\tsavePhoto: (file: File) => Promise<any>;\r\n  typeOfModalRef: string | null;\r\n  onSaveProfile: (values: ProfileType) => Promise<string | null> | null;\r\n\tfullName?: string | null;\r\n\taboutMe?: string | null;\r\n  contacts?: ContactsType;\r\n\tlookingForAJob?: boolean;\r\n\tlookingForAJobDescription?: string | null;\r\n}\r\n\r\nconst Popup = ({\r\n  onModalClose,\r\n  savePhoto,\r\n  typeOfModalRef,\r\n  onSaveProfile,\r\n\tfullName,\r\n\taboutMe,\r\n  contacts,\r\n\tlookingForAJob,\r\n\tlookingForAJobDescription,\r\n}: PropsType) => {\r\n  switch (typeOfModalRef) {\r\n    case \"updateThePhoto\":\r\n      return (\r\n        <>\r\n          <UpdatePhoto onModalClose={onModalClose} savePhoto={savePhoto} />\r\n        </>\r\n      );\r\n\r\n    case \"editProfile\":\r\n      return (\r\n        <>\r\n          <UpdateProfileInfo\r\n            onModalClose={onModalClose}\r\n            onSaveProfile={onSaveProfile}\r\n            fullName={fullName}\r\n            aboutMe={aboutMe}\r\n            contacts={contacts}\r\n            lookingForAJob={lookingForAJob}\r\n            lookingForAJobDescription={lookingForAJobDescription}\r\n          />\r\n        </>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default Popup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Info_contact__TMSN5\",\"item\":\"Info_item__b5GHp\",\"job\":\"Info_job__+Auzx\",\"infoSection\":\"Info_infoSection__dc4fJ\",\"infoHeadline\":\"Info_infoHeadline__T2YZZ\",\"descriptions\":\"Info_descriptions__Mv+r+\"};","import * as React from \"react\";\r\nimport classes from \"./Info.module.css\";\r\nimport { ContactsType } from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n  aboutMe?: string | null;\r\n  contacts?: ContactsType;\r\n  lookingForAJob?: boolean;\r\n  lookingForAJobDescription?: string | null;\r\n};\r\n\r\nconst Info = ({\r\n  aboutMe,\r\n  contacts,\r\n  lookingForAJob,\r\n  lookingForAJobDescription,\r\n}: PropsType) => {\r\n  let contact = contacts && Object.keys(contacts).map((key) => {\r\n    if (contacts[key]) {\r\n      return (\r\n        <div key={key} className={classes.contact}>\r\n          <div className={classes.item}>{key}: </div>\r\n          <div>{contacts[key]}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return \"\";\r\n  });\r\n  return (\r\n    <>\r\n      {aboutMe && aboutMe.length > 0 && (\r\n        <div className={classes.infoSection}>\r\n          <div className={classes.infoHeadline}>About me:</div>\r\n          <div className={classes.descriptions}>{aboutMe}</div>\r\n        </div>\r\n      )}\r\n      <div className={classes.infoSection}>\r\n        <div className={classes.infoHeadline}>Contact information:</div>\r\n        {contact}\r\n      </div>\r\n      <div className={classes.infoSection}>\r\n        <div className={classes.infoHeadline}>Job information:</div>\r\n        <div className={classes.work}>\r\n          {lookingForAJob ? (\r\n            <div className={classes.job}>\r\n              <div className={classes.item}>looking for a job:</div>\r\n              <div>&#10004;</div>\r\n              <div className={classes.item}>kind of job:</div>\r\n              <div>{lookingForAJobDescription}</div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.job}>\r\n              <div className={classes.item}>looking for a job:</div>\r\n              <div>&#10008;</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileHeader_avatar__OALQ+\",\"imgWrapper\":\"ProfileHeader_imgWrapper__C4xGb\",\"main\":\"ProfileHeader_main__lBPa7\",\"fullName\":\"ProfileHeader_fullName__vzHpz\",\"editBtn\":\"ProfileHeader_editBtn__9iP5-\",\"status\":\"ProfileHeader_status__q8wGP\",\"menuBlockWrapper\":\"ProfileHeader_menuBlockWrapper__FkhEK\",\"optionsActive\":\"ProfileHeader_optionsActive__9jSl8\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusField\":\"ProfileStatus_statusField__s5XtT\",\"statusFildActive\":\"ProfileStatus_statusFildActive__zQBW6\",\"statusForm\":\"ProfileStatus_statusForm__z0ATU\",\"statusFild\":\"ProfileStatus_statusFild__EtLK2\",\"btnWrapper\":\"ProfileStatus_btnWrapper__l5cln\",\"disable\":\"ProfileStatus_disable__EUc17\",\"statusFildStatic\":\"ProfileStatus_statusFildStatic__kgN3N\"};","import * as React from \"react\";\r\nimport { useState, useRef, memo } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\";\r\nimport Button from \"../../../common/Button/Button\";\r\nimport { useClickOutside } from \"../../../../hooks/hooks\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n  composeValidators,\r\n  maxLength,\r\n} from \"../../../../utils/validators/validators\";\r\n\r\ntype PropsType = {\r\n  status: string;\r\n  isOwner?: boolean;\r\n  updateUserStatus?: (newStatus: string) => void;\r\n};\r\n\r\nconst ProfileStatus = ({ status, updateUserStatus, isOwner }: PropsType) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const statusFormRef = useRef(null);\r\n\r\n  useClickOutside(statusFormRef, null, () => setEditMode(false));\r\n\r\n  return (\r\n    <div className={classes.statusField}>\r\n      {isOwner ? (\r\n        <>\r\n          <div\r\n            ref={statusFormRef}\r\n            className={\r\n              editMode\r\n                ? classes.statusFildActive\r\n                : classes.statusFildActive + \" \" + classes.disable\r\n            }\r\n          >\r\n            <Form\r\n              onSubmit={(values) => {\r\n                values.status !== status && updateUserStatus && updateUserStatus(values.status);\r\n                setEditMode(!editMode);\r\n              }}\r\n              initialValues={{ status: status }}\r\n              render={({\r\n                handleSubmit,\r\n                form,\r\n                submitting,\r\n                pristine,\r\n                values,\r\n              }) => (\r\n                <form onSubmit={handleSubmit} className={classes.statusForm}>\r\n                  <Field\r\n                    name=\"status\"\r\n                    component={Textarea}\r\n                    validate={composeValidators( maxLength(300))}\r\n                    type=\"text\"\r\n                    placeholder=\"Write a status...\"\r\n                    className={classes.statusFild}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength={305}\r\n\t\t\t\t\t\t\t\t\t\tvalidlength={300}\r\n\t\t\t\t\t\t\t\t\t\tentertern={\"true\"}\r\n                  />\r\n                  <div className={classes.btnWrapper}>\r\n                    <Button type=\"submit\" disabled={submitting || pristine}>\r\n                      Accept\r\n                    </Button>\r\n                  </div>\r\n                  <div className={classes.btnWrapper}>\r\n                    <Button\r\n                      type={\"button\"}\r\n                      disabled={!editMode}\r\n                      handler={() => setEditMode(!editMode)}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className={classes.statusFildStatic}>\r\n            <span onDoubleClick={() => setEditMode(!editMode)}>\r\n              {status || \"Изменить статус...\"}\r\n            </span>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className={classes.statusFildStatic}>\r\n          <span>{status || \" \"}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileStatus);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"menuBlock\":\"MenuBlock_menuBlock__7clDd\",\"menuItem\":\"MenuBlock_menuItem__0Dc7d\",\"icon\":\"MenuBlock_icon__C1oij\"};","import * as React from \"react\";\r\n\r\nfunction IconPicture(props: {[key: string]: any}) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 21 21\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(3 3)\">\r\n        <g stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M2.5.5h10a2 2 0 012 2v10a2 2 0 01-2 2h-10a2 2 0 01-2-2v-10a2 2 0 012-2z\" />\r\n          <path d=\"M14.5 10.5l-3-3-3 2.985M12.5 14.5l-9-9-3 3\" />\r\n        </g>\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M12 4 A1 1 0 0 1 11 5 A1 1 0 0 1 10 4 A1 1 0 0 1 12 4 z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconPicture;","import * as React from \"react\";\r\n\r\nfunction IconPencil(props: {[key: string]: any}) {\r\n  return (\r\n    <svg\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      viewBox=\"0 0 24 24\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M17 3a2.85 2.83 0 114 4L7.5 20.5 2 22l1.5-5.5zM15 5l4 4\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconPencil;\r\n","import * as React from \"react\";\r\n\r\nfunction IconDelete(props: {[key: string]: any}) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M6 19a2 2 0 002 2h8a2 2 0 002-2V7H6v12M8 9h8v10H8V9m7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconDelete;\r\n","import * as React from \"react\";\r\nimport classes from \"./MenuBlock.module.css\";\r\nimport IconPicture from \"../../../../../assets/svg/IconPicture\";\r\nimport IconPencil from \"../../../../../assets/svg/IconPencil\";\r\nimport IconDelete from \"../../../../../assets/svg/IconDelete\";\r\n\r\ntype PropsType = {\r\n  isOwner: boolean;\r\n  onModalOpen: (type: string) => void;\r\n  savePhoto: (file: File) => void;\r\n};\r\n\r\nconst MenuBlock = ({ isOwner, onModalOpen, savePhoto }: PropsType) => {\r\n  const onPhotoDeleted = () => {\r\n    // savePhoto(null);\r\n  }; // it is not provided by the server side, null is processed and returns an error\r\n  return (\r\n    <div className={classes.menuBlock}>\r\n      <div\r\n        onClick={(e) => {\r\n          console.log(e.target);\r\n        }}\r\n        className={classes.menuItem}\r\n      >\r\n        <span className={classes.icon}>\r\n          <IconPicture />\r\n        </span>\r\n        <span>Open a photo</span>\r\n      </div>\r\n      {isOwner ? (\r\n        <>\r\n          <div\r\n            data-modal=\"updateThePhoto\"\r\n            onClick={(e) =>\r\n              e.currentTarget.dataset.modal &&\r\n              onModalOpen(e.currentTarget.dataset.modal)\r\n            }\r\n            className={classes.menuItem}\r\n          >\r\n            <span className={classes.icon}>\r\n              <IconPencil />\r\n            </span>\r\n            <span>Update the photo</span>\r\n          </div>\r\n          <div onClick={onPhotoDeleted} className={classes.menuItem}>\r\n            <span className={classes.icon}>\r\n              <IconDelete />\r\n            </span>\r\n            <span>Delete a photo</span>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBlock;\r\n","import * as React from \"react\";\r\nimport classes from \"./ProfileHeader.module.css\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useMouseOverLeaveDebounce } from \"../../../../hooks/hooks\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport MenuBlock from \"./MenuBlock/MenuBlock\";\r\nimport { PhotosType } from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n  photos?: PhotosType;\r\n  isOwner: boolean;\r\n  fullName?: string;\r\n  status: string;\r\n  updateUserStatus: (value: string) => void;\r\n  savePhoto: (file: File) => void;\r\n  onModalOpen: (type: string) => void;\r\n};\r\n\r\nconst ProfileHeader = ({\r\n\tphotos,\r\n  isOwner,\r\n  fullName,\r\n  status,\r\n  savePhoto,\r\n  onModalOpen,\r\n  updateUserStatus,\r\n}: PropsType) => {\r\n  const menuRef = useRef(null);\r\n  const [isMouseOver, setMouseOver] = useState(false);\r\n\r\n  useMouseOverLeaveDebounce(menuRef, setMouseOver, 200);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.avatar} ref={menuRef}>\r\n        <div className={classes.imgWrapper}>\r\n          <img src={(photos && photos.large) || \"http://dummyimage.com/140\"} alt=\"avatar\" />\r\n        </div>\r\n        <div\r\n          className={\r\n            isMouseOver\r\n              ? classes.menuBlockWrapper + \" \" + classes.optionsActive\r\n              : classes.menuBlockWrapper\r\n          }\r\n        >\r\n          <MenuBlock\r\n            onModalOpen={onModalOpen}\r\n            isOwner={isOwner}\r\n            savePhoto={savePhoto}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.main}>\r\n        <div className={classes.fullName}>{fullName}</div>\r\n        {isOwner ? (\r\n          <button\r\n            data-modal=\"editProfile\"\r\n            className={classes.editBtn}\r\n            onClick={(e) => e.currentTarget.dataset.modal && onModalOpen(e.currentTarget.dataset.modal)}\r\n          >\r\n            Edit a profile\r\n          </button>\r\n        ) : null}\r\n        <div className={classes.status}>\r\n          <ProfileStatus\r\n            isOwner={isOwner}\r\n            status={status}\r\n            updateUserStatus={updateUserStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","import * as React from \"react\";\r\nimport { memo, useRef, useState } from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { useCloseOnBackModalClick } from \"../../../hooks/hooks\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport Popup from \"./Popups/Popup\";\r\nimport Info from \"./Info/Info\";\r\nimport HeaderProfile from \"./ProfileHeader/ProfileHeader\";\r\nimport { ProfileType, UsersType } from \"../../../types/types\";\r\ntype PropsType = {\r\n  profile: ProfileType;\r\n  users: Array<UsersType>;\r\n  status: string;\r\n  isOwner: boolean;\r\n  totalUsersCount: number;\r\n  savePhoto: (file: File) => Promise<any>;\r\n  updateUserStatus: (status: string) => void;\r\n  saveProfile: (info: ProfileType) => Promise<string | null>;\r\n};\r\n\r\nconst ProfileInfo = ({\r\n  profile: {\r\n    fullName,\r\n    aboutMe,\r\n    contacts,\r\n    lookingForAJob,\r\n    lookingForAJobDescription,\r\n    photos,\r\n  },\r\n  totalUsersCount,\r\n  users,\r\n  status,\r\n  isOwner,\r\n  savePhoto,\r\n  updateUserStatus,\r\n  saveProfile,\r\n}: PropsType) => {\r\n  const [typeOfModalRef, setOfModalRef] = useState<string | null>(null);\r\n  const modalRef = useRef<HTMLDialogElement | null>(null);\r\n  const onModalOpen = (type: string) => {\r\n    if (modalRef.current) {\r\n      modalRef.current.showModal();\r\n      setOfModalRef(type);\r\n      document.body.style.overflowY = \"hidden\";\r\n    }\r\n  };\r\n  const onModalClose = () => {\r\n    if (modalRef.current) {\r\n      modalRef.current.close();\r\n      document.body.style.overflowY = \"auto\";\r\n    }\r\n  };\r\n  const onSaveProfile = (values: ProfileType) => {\r\n    const errorMessage = saveProfile(values);\r\n    if (errorMessage) {\r\n      return errorMessage;\r\n    } else {\r\n      onModalClose();\r\n\t\t\treturn null\r\n    }\r\n  };\r\n  useCloseOnBackModalClick(modalRef, onModalClose);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <div className={classes.header}>\r\n          <HeaderProfile\r\n            onModalOpen={onModalOpen}\r\n            photos={photos}\r\n            isOwner={isOwner}\r\n            savePhoto={savePhoto}\r\n            fullName={fullName}\r\n            status={status}\r\n            updateUserStatus={updateUserStatus}\r\n          />\r\n        </div>\r\n        <div className={classes.info}>\r\n          <Info\r\n            aboutMe={aboutMe}\r\n            contacts={contacts}\r\n            lookingForAJob={lookingForAJob}\r\n            lookingForAJobDescription={lookingForAJobDescription}\r\n          />\r\n        </div>\r\n        { isOwner ? <div className={classes.friends}>\r\n          <Friends users={users} totalUsersCount={totalUsersCount} />\r\n        </div> : null}\r\n      </div>\r\n      <dialog ref={modalRef} className={classes.popup}>\r\n        <Popup\r\n          fullName={fullName}\r\n          aboutMe={aboutMe}\r\n          contacts={contacts}\r\n          lookingForAJob={lookingForAJob}\r\n          lookingForAJobDescription={lookingForAJobDescription}\r\n          onSaveProfile={onSaveProfile}\r\n          onModalClose={onModalClose}\r\n          savePhoto={savePhoto}\r\n          typeOfModalRef={typeOfModalRef}\r\n        />\r\n      </dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileInfo);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileHeader\":\"ProfileInfoPreloader_profileHeader__o+kzq\",\"profileHeaderImg\":\"ProfileInfoPreloader_profileHeaderImg__ZjDi5\",\"wrapperImg\":\"ProfileInfoPreloader_wrapperImg__F2FUm\",\"profileInfo\":\"ProfileInfoPreloader_profileInfo__lyhLG\",\"fullName\":\"ProfileInfoPreloader_fullName__OT0ud\",\"infoSection\":\"ProfileInfoPreloader_infoSection__rBvMa\",\"infoHeadline\":\"ProfileInfoPreloader_infoHeadline__WQPPA\",\"info\":\"ProfileInfoPreloader_info__Ngo3l\",\"contacts\":\"ProfileInfoPreloader_contacts__HH2kq\",\"infoName\":\"ProfileInfoPreloader_infoName__EHy4v\",\"job\":\"ProfileInfoPreloader_job__dorr9\",\"preload\":\"ProfileInfoPreloader_preload__5Vwbd\",\"statusField\":\"ProfileInfoPreloader_statusField__FDvGI\",\"statusFildStatic\":\"ProfileInfoPreloader_statusFildStatic__9Hywp\"};","import React from \"react\";\r\nimport classes from \"./ProfileInfoPreloader.module.css\";\r\nconst ProfileInfoPreloader = () => {\r\n  return (\r\n    <>\r\n      <div className={classes.profileHeader}>\r\n        <div className={classes.profileHeaderImg}>\r\n          <div className={classes.wrapperImg}>\r\n            <img src={\"\"} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className={classes.profileInfo}>\r\n          <div className={classes.fullName + \" \" + classes.preload}>\r\n            Ivan Ivanov\r\n          </div>\r\n          <div className={classes.statusField}>\r\n            <div className={classes.statusFildStatic}>\r\n              <span className={classes.preload}>каждого из них вы с легкостью сможете найти в интернете. Мы будем отслеживат Мы будем отслеживат</span>\r\n\t\t\t\t\t\t\t<span className={classes.preload}> Мы будем отслеживать только з них.Мы будем отслеживат</span>\r\n            </div>\r\n          </div>\r\n          <div className={classes.infoSection}>\r\n            <div className={classes.infoHeadline}>About me:</div>\r\n            <span className={classes.preload}>каждого из них вы с легкостью сможете найти в интернете. Мы будем отслеживат Мы будем отслеживат</span>\r\n\t\t\t\t\t\t<span className={classes.preload}> Мы будем отслеживать только з них.Мы будем отслеживат.Мы будем отслеживат Мы будем отслеживат</span>\r\n\t\t\t\t\t\t<span className={classes.preload}>каждого из них вы с легкостью сможете найти в интернете. Мы будем отслеживат Мы будем отслеживат</span>\r\n\t\t\t\t\t\t<span className={classes.preload}> Мы будем отслеживать только з них.Мы будем отслеживатМы будем отслеживат</span>\r\n          </div>\r\n          <div className={classes.infoSection}>\r\n            <div className={classes.infoHeadline}>Contact information:</div>\r\n            <span className={classes.preload}>каждого из них вы с легкостью сможете найти </span>\r\n          </div>\r\n          <div className={classes.infoSection}>\r\n            <div className={classes.infoHeadline}>Job information:</div>\r\n            <span className={classes.preload}>каждого из них вы с легкостью сможете найти </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoPreloader;\r\n","import * as React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport ProfileInfoPreloader from \"../common/Preloader/ProfileInfoPreloader\";\r\nimport {\r\n  AuthType,\r\n  ProfilePageType,\r\n  ProfileType,\r\n  UsersType,\r\n} from \"../../types/types\";\r\n\r\ntype Props = {\r\n  profilePage: ProfilePageType;\r\n  auth: AuthType;\r\n  isOwner: boolean;\r\n  users: Array<UsersType>;\r\n  totalUsersCount: number;\r\n  updateUserStatus: (status: string) => void;\r\n  addPost: (payload: {newPostText: string, fullName: string}) => void;\r\n  deletePost: (id: number) => void;\r\n  savePhoto: (file: File) => Promise<any>;\r\n  saveProfile: (info: ProfileType) => Promise<string | null>;\r\n};\r\n\r\nconst Profile = ({\r\n  profilePage: { isFetching, profile, status, posts },\r\n  auth,\r\n  isOwner,\r\n  users,\r\n  totalUsersCount,\r\n  updateUserStatus,\r\n  addPost,\r\n  deletePost,\r\n  savePhoto,\r\n  saveProfile,\r\n}: Props) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.profileInfo}>\r\n        {profile === null || isFetching ? (\r\n          <ProfileInfoPreloader />\r\n        ) : (\r\n          <ProfileInfo\r\n            totalUsersCount={totalUsersCount}\r\n            users={users}\r\n            isOwner={isOwner}\r\n            profile={profile}\r\n            status={status}\r\n            updateUserStatus={updateUserStatus}\r\n            savePhoto={savePhoto}\r\n            saveProfile={saveProfile}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={classes.myPosts}>\r\n        {isOwner ? (\r\n          profile === null || isFetching ? (\r\n            <div className={classes.preloader}>\r\n              <Preloader />\r\n            </div>\r\n          ) : (\r\n            <MyPosts\r\n              posts={posts}\r\n              profile={profile}\r\n              addPost={addPost}\r\n              deletePost={deletePost}\r\n            />\r\n          )\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import {\r\n  addPost,\r\n  deletePost,\r\n  getUserProfile,\r\n  getUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateUserStatus,\r\n} from \"../../redux/profile-reduser\";\r\nimport { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/redux-store\";\r\nimport {\r\n  ProfileType,\r\n} from \"../../types/types\";\r\nimport { requestUsers } from \"../../redux/users-reduser\";\r\nimport { useGetUserProfile } from \"../../hooks/hooks\";\r\n\r\n// type MapStateToProps = {\r\n//   profilePage: ProfilePageType;\r\n//   auth: AuthType;\r\n//   users: Array<UsersType>;\r\n//   totalUsersCount: number;\r\n// };\r\n\r\ntype MapProps = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchProps = {\r\n  addPost: (payload: {newPostText: string, fullName: string}) => void;\r\n  getUserProfile: (userId: number) => void;\r\n  getUserStatus: (userId: number) => void;\r\n  updateUserStatus: (status: string) => void;\r\n  deletePost: (id: number) => void;\r\n  savePhoto: (file: any) => Promise<any>;\r\n  saveProfile: (info: ProfileType) => Promise<string | null>;\r\n  requestUsers: (\r\n    currentPage: number,\r\n    pageSize: number,\r\n    search?: string,\r\n    friend?: boolean\r\n  ) => void;\r\n};\r\n\r\ntype Props = MapProps & MapDispatchProps;\r\n\r\nlet ProfileContainer = ({\r\n  getUserProfile,\r\n  getUserStatus,\r\n  requestUsers,\r\n  auth,\r\n  ...props\r\n}: Props) => {\r\n  let id = useGetUserProfile(\r\n    auth.userId,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    requestUsers\r\n  );\r\n\r\n  return id ? (\r\n    <Profile isOwner={id === auth.userId} auth={auth} {...props} />\r\n  ) : (\r\n    <Navigate to={\"/login\"} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    auth: state.auth,\r\n    users: state.usersPage.users,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addPost,\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  deletePost,\r\n  savePhoto,\r\n  saveProfile,\r\n  requestUsers,\r\n})(ProfileContainer);\r\n"],"names":["props","_jsx","viewBox","fill","height","width","children","d","xmlns","id","stroke","strokeWidth","fillRule","_jsxs","Post","_ref","photo","name","date","deletePost","message","likesCount","isOptionsSelect","setOptionsSelect","useState","optionsRef","useRef","useMouseOverLeaveDebounce","_Fragment","className","classes","src","alt","ref","IconOptionPost","MenuBlock","IconLike","_ref2","onClick","memo","onAddPost","Form","onSubmit","render","handleSubmit","form","submitting","pristine","values","Field","component","Textarea","placeholder","type","Button","disabled","MyPosts","posts","profile","addPost","postsElements","reverse","map","post","photos","small","AddNewPostForm","async","fullName","newPostText","reset","length","IconNoPosts","users","totalUsersCount","friends","user","slicaedName","textSlicer","Link","to","large","onModalClose","savePhoto","dragAndDropZoneRef","setFocus","useCallback","element","focus","errorMessage","setErrorMessage","IconUpload","accept","onChange","e","file","target","files","Boolean","then","data","htmlFor","IconClose","onSaveProfile","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","error","FORM_ERROR","initialValues","submitError","Input","Object","keys","contact","i","Fragment","value","String","typeOfModalRef","UpdatePhoto","UpdateProfileInfo","key","item","infoSection","infoHeadline","descriptions","work","job","ProfileStatus","status","updateUserStatus","isOwner","editMode","setEditMode","statusFormRef","useClickOutside","validate","composeValidators","maxLength","validlength","entertern","handler","onDoubleClick","transform","strokeLinecap","strokeLinejoin","onModalOpen","console","log","IconPicture","currentTarget","dataset","modal","IconPencil","onPhotoDeleted","IconDelete","menuRef","isMouseOver","setMouseOver","ProfileInfo","saveProfile","setOfModalRef","modalRef","current","close","document","body","style","overflowY","useCloseOnBackModalClick","HeaderProfile","showModal","Info","Friends","Popup","ProfileInfoPreloader","profilePage","isFetching","auth","Preloader","connect","state","usersPage","getUserProfile","getUserStatus","requestUsers","useGetUserProfile","userId","Profile","Navigate"],"sourceRoot":""}